name: Build & Release

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA to build and release'
        required: true

jobs:
  build-linux-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target commit
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.commit_sha }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          pip install -r ./build_configs/linux/requirements.txt

      - name: Build binary
        run: |
          SHORT_SHA=$(echo "${{ github.event.inputs.commit_sha }}" | cut -c1-7)
          BUILD_FILE_NAME=staking_deposit-cli-${SHORT_SHA}-linux-amd64
          mkdir $BUILD_FILE_NAME
          pyinstaller --distpath ./$BUILD_FILE_NAME ./build_configs/linux/build.spec

      - name: Compress binary
        run: |
          SHORT_SHA=$(echo "${{ github.event.inputs.commit_sha }}" | cut -c1-7)
          BUILD_FILE_NAME=staking_deposit-cli-${SHORT_SHA}-linux-amd64
          tar -zcvf ${BUILD_FILE_NAME}.tar.gz ./${BUILD_FILE_NAME}
          sha256sum ${BUILD_FILE_NAME}.tar.gz | cut -d ' ' -f1 > ${BUILD_FILE_NAME}.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            staking_deposit-cli-*-linux-amd64.tar.gz
            staking_deposit-cli-*-linux-amd64.sha256

  build-macos-amd64:
    runs-on: macos-latest
    steps:
      - name: Checkout target commit
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.commit_sha }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: pip3 install -r ./build_configs/macos/requirements.txt

      - name: Build binary
        run: |
          SHORT_SHA=$(echo "${{ github.event.inputs.commit_sha }}" | cut -c1-7)
          BUILD_FILE_NAME=staking_deposit-cli-${SHORT_SHA}-darwin-amd64
          mkdir $BUILD_FILE_NAME
          pyinstaller --distpath ./$BUILD_FILE_NAME ./build_configs/macos/build.spec

      - name: Compress binary
        run: |
          SHORT_SHA=$(echo "${{ github.event.inputs.commit_sha }}" | cut -c1-7)
          BUILD_FILE_NAME=staking_deposit-cli-${SHORT_SHA}-darwin-amd64
          tar -zcvf ${BUILD_FILE_NAME}.tar.gz ./${BUILD_FILE_NAME}
          shasum -a 256 ${BUILD_FILE_NAME}.tar.gz | cut -d ' ' -f1 > ${BUILD_FILE_NAME}.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            staking_deposit-cli-*-darwin-amd64.tar.gz
            staking_deposit-cli-*-darwin-amd64.sha256

  release:
    needs: [build-linux-amd64, build-macos-amd64]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release from commit ${{ github.event.inputs.commit_sha }}
          tag_name: v${{ github.event.inputs.commit_sha }}
          files: |
            artifacts/linux-build/*.tar.gz
            artifacts/linux-build/*.sha256
            artifacts/macos-build/*.tar.gz
            artifacts/macos-build/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
